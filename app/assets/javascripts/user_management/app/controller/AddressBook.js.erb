<%url_helper = ::Rails.application.routes.url_helpers%>

Ext.define('UserManagement.controller.AddressBook', {
  extend: 'UserManagement.controller.UserProfile',
  loadedUserStore:null,
  views: [
      'UserManagement.view.addressBook.AddressBookTreePanel',
      'UserManagement.view.addressBook.MemberDetailsPanel',
      'UserManagement.view.addressBook.PassportDetails',
      'UserManagement.view.addressBook.VisaDetails',
      'UserManagement.view.addressBook.ArrivalAndOtherInformation'
  ],

  models:[
    'UserManagement.model.UserProfile.AddressBookModel',
    'UserManagement.model.UserProfile.VisaDetails',
    'UserManagement.model.VerificationIdType'
//    'UserManagement.model.UserProfile.UserProfileDetails',
//    'UserManagement.model.UserProfile.User',
//    'UserManagement.model.UserProfile.NonIndianSpecificDetails',
  ],
  stores:[
    'UserManagement.store.UserProfile.AddressBookStore',
    'UserManagement.store.VerificationIdTypes'
//    'UserManagement.store.UserProfile.UsersStore'
  ],

  refs: [
      {
        ref: 'addressBookTreePanel',
        selector: 'addressBookTreePanel'
      },
      {
          selector: 'addressBookTreePanel treepanel[itemId="addressBookId"]',
          ref: 'addressBookTree'
      },
      {
          ref: 'memberDetailsPanel',
          selector: 'memberDetailsPanel'
      },
      {
          selector: 'memberDetailsPanel form[itemId="userDetailsId"]',
          ref: 'userForm'
      },
      {
          selector: 'memberDetailsPanel form[itemId="userPersonalDetailsId"]',
          ref: 'personalDetailsForm'
      },
      {
          selector: 'memberDetailsPanel form[itemId="passportDetails"]',
          ref: 'passportForm'
      },
      {
          selector: 'memberDetailsPanel form[itemId="verificationProofId"]',
          ref: 'verificationProof'
      },
      {
          selector: 'nonIndianVisaDetailsGrid',
          ref: 'visaGrid'
      },
  ],

  init: function() {
//    this.control({
      this.listen({
          controller:{

          },
          component:{
              'addressBookTreePanel':{
//                  profileChartDoubleClick:this.onProfileChartDoubleClick,
                  afterrender:this.loadAddressBookData,
              },
              'addressBookTreePanel treepanel':{
                  selectLeadUser:this.selectUserInAddressBook,
                  select:this.selectuser
              },
              'addressBookTreePanel button':{
                  click:this.userOperations,
              },
              'memberDetailsPanel':{
                  afterrender:this.populateUserInfo
              },
              'memberDetailsPanel button[itemId="Save"]':{
                  click:this.saveMemberDetails
              },
              'nonIndianVisaDetailsGrid button':{
                  click:this.visaOperation
              },
              'configure_paths':this.configure_paths
          }
      });
  },
  visaOperation:function(button){
      if(button.itemId == 'addVisa'){
          this.addNewVisa(button);
      }else if(button.itemId == 'deleteVisa'){
          this.deleteVisa(button);
      }
  },
  userOperations:function(button){
    if(button.itemId == 'addUser'){
        this.addUserMember();
    }else if(button.itemId == 'deleteUser'){
        this.deleteUser();
    }
  },
  addNewVisa:function(button){
    var visaGrid = button.up('.grid');
    var newVisa = Ext.create('UserManagement.model.UserProfile.VisaDetails',{});
    visaGrid.getStore().insert(0,newVisa);
    visaGrid.getView().refresh();
    visaGrid.editingPlugin.startEdit(newVisa,1);
  },
  addUserMember:function(){
      var user_group_id = this.config_variables["user_group_id"];
      var newUser = null;
      if(user_group_id == 2){
          newUser =
              Ext.create('UserManagement.model.UserProfile.IndianUser',
                  {
                      id:0,
                      user_group_id:user_group_id
                  });
      }else if( [3,4].indexOf(user_group_id) != -1){
          newUser =
              Ext.create('UserManagement.model.UserProfile.NRIUser',
                  {
                      id:0,
                      user_group_id:user_group_id
                  });
      }else if(user_group_id == 5){
          newUser =
              Ext.create('UserManagement.model.UserProfile.OverseasUser',
                  {
                      id:0,
                      user_group_id:user_group_id
                  });
      }

      this.deselectUserinAddressBook();
      this.loadUserRecordInView(newUser);
  },
  saveMemberDetails:function(){
      var memberDetailsPanel = this.getMemberDetailsPanel();

      // Load the user Profile Details Tab
      var authencityTokenParam = $('meta[name="csrf-token"]').attr('content');

      this.getUserForm().getForm().updateRecord();
      this.getPersonalDetailsForm().getForm().updateRecord();
      var userRecord = this.getUserForm().getForm().getRecord();
      console.log(userRecord);

      var verificationRecord;

      var user_id = userRecord.get('id');
      var user_group_id = this.config_variables["user_group_id"] //userRecord.get('user_group_id');
      if([2,3,4].indexOf(user_group_id) != -1 ){
        // Indian, NRI and Nepal/Bhutan Users
        verificationForm = this.getVerificationProof().getForm();
        verificationForm.updateRecord();
        verificationRecord = verificationForm.getRecord();
      }else if(user_group_id == 5){
        // Overseas Users
        var passportForm = this.getPassportForm().getForm()
        passportForm.updateRecord();
        var passportRecord = passportForm.getRecord();
      }

      var operation = "edit"

      if(user_id == 0){
          operation = "add"
          userRecord.set('dependent_user_id',this.config_variables["user_id"])
      }

      userData = userRecord.getData(true);
      userRecordData = Ext.encode(userData);

      console.log(userRecordData)

      form_submit_path = "<%=CGI.unescape url_helper.save_member_details_path('{user_id}')%>";
      url_path = this.getUrlWithUserId(form_submit_path,user_id)

      url_params = {
          authenticity_token:authencityTokenParam,
          userDetails:userRecordData,
          operation:operation
      }

      Ext.Ajax.request({
          url:url_path,
          params:url_params,
          method:'POST',
          scope:this,
          success:function(response){
            console.log(response);
              var result = Ext.decode(response.responseText);
              var result_message = result.message;
              Ext.Msg.show({
                  title:'Alert',
                  msg:result_message,
                  buttons:Ext.Msg.OK
              });
          },
          failure:function(form,action){
              var result_message = action.result.message;
              Ext.Msg.show({
                  title:'Alert',
                  msg:result_message,
                  buttons:Ext.Msg.OK
              });
          }
      });

  },
  deselectUserinAddressBook:function(){
      var addressBookTree = this.getAddressBookTree();
      var abRootnode = addressBookTree.getRootNode();
      addressBookTree.selectPath(abRootnode.getPath());
  },
  selectUserInAddressBook:function(userId){
      var addressBookTree = this.getAddressBookTree();
      var treeStore = addressBookTree.getStore();
      var leadUserNode = treeStore.getNodeById(userId);
      addressBookTree.selectPath(leadUserNode.getPath());
  },
  selectuser:function(thisElement, record, item, index, e, eOpts){
      var userId = record.get('id');
      console.log(record);

      console.log(this);

      if(this.loadedUserStore){
          if(userId != 'root'){
    //          var user_details_store = this.getUserManagementStoreUserProfileUsersStoreStore();
              var selectedUser = this.loadedUserStore.findRecord('id',userId);

              if(selectedUser){
                  this.loadUserRecordInView(selectedUser);
              }
          }
      }
  },
  loadUserRecordInView:function(userRecord){
      var userPersonalDetailsTab = this.getMemberDetailsPanel();

      // Load the user Profile Details Tab
      this.getUserForm().getForm().loadRecord(userRecord);

      personalDetail = userRecord.personal_detail

      if(!personalDetail){
          personalDetail = Ext.create('UserManagement.model.UserProfile.UserProfileDetails',
              {
                  'personal_detail[user_id]':0
              }
          )
          personalDetail.user = userRecord;
          userRecord.personal_detail = personalDetail
      }

      this.getPersonalDetailsForm().getForm().loadRecord(personalDetail);

      if(this.config_variables["user_group_id"] == 2){
          // Load Indian Verification Details Tab
          verification_id_detail = userRecord.verification_id_detail;
          if(!verification_id_detail){
              verification_id_detail
                = Ext.create('UserManagement.model.UserProfile.VerificationIdDetails',{verification_id_type_id:1})
          }

          userRecord.verification_id_detail = verification_id_detail
          this.getVerificationProof().getForm().loadRecord(userRecord.verification_id_detail);

      }if([3,4].indexOf(this.config_variables["user_group_id"]) != -1){
          // Load Customized Verification Tab for NRI, Nepal/Bhutan
          nri_detail = userRecord.nri_detail;
          if(!nri_detail){
              nri_detail
                  = Ext.create('UserManagement.model.UserProfile.NRIDetails',{verification_id_type_id:4});
          }

          userRecord.nri_detail = nri_detail
          this.getVerificationProof().getForm().loadRecord(userRecord.nri_detail);

      }else if(this.config_variables["user_group_id"] == 5){
          // Load the passport / Visa Details Tab
          var passportDetails = this.getPassportForm();
          passport_detail = userRecord.passport_detail
          if(!passport_detail){
              passport_detail
                = Ext.create('UserManagement.model.UserProfile.PassportDetails')

            userRecord.passport_detail = passport_detail
          }

          passportDetails.getForm().loadRecord(passport_detail);
      }
  },
  populateUserInfo:function(){
      var user_details_store = this.getUserManagementStoreUserProfileUsersStoreStore();
  },
  loadAddressBookData:function(){

      // Populate the addressbook from the user store itself.
      var thisControllerRef = this;

      if(this.config_variables["user_group_id"] == 2){
          this.loadedUserStore
             = thisControllerRef.getUserManagementStoreUserProfileIndianUsersStoreStore();
      }else if([3,4].indexOf(this.config_variables["user_group_id"]) != -1){
          this.loadedUserStore
             = thisControllerRef.getUserManagementStoreUserProfileNRIUsersStoreStore();
      }else if(this.config_variables["user_group_id"] == 5){
          this.loadedUserStore
             = thisControllerRef.getUserManagementStoreUserProfileOverseasUsersStoreStore();
      }

      this.getUserDetails(thisControllerRef.loadedUserStore,function(){
          var addressBookPanel = thisControllerRef.getAddressBookTreePanel();
          var addressBookTreePanel =
              addressBookPanel.down('#addressBookId');

          var addressBookRootNode = {
              name: 'users',
              text: 'Users',
              expanded: true,
              leaf: false,
              children: []
          };

          addressBookTreePanel.setRootNode(addressBookRootNode);
          var abRootnode = addressBookTreePanel.getRootNode();

          thisControllerRef.loadedUserStore.each(function(eachAddress){
              var childNode;

              childNode = {
                  name: eachAddress.get('full_name'),
                  text: eachAddress.get('full_name'),
                  leaf: true,
                  id:eachAddress.get('id')
              }

              abRootnode.appendChild(childNode);

          });

          var leadUser = thisControllerRef.getLeadUser(thisControllerRef.loadedUserStore);
          console.log(thisControllerRef.loadedUserStore);
          console.log(leadUser);

          // Select the Lead user in the AddressBook
          addressBookTreePanel.fireEvent('selectLeadUser',leadUser.get('id'));

      });

  }

});
